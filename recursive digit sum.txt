
//////RECURSIVE DIGIT SUM

import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the superDigit function below.
     static int superDigit(String n, int k) {

        char []ch = n.toCharArray();
        long sum=0;

        for(int i=0; i<ch.length; i++)
            {
                sum+=Long.parseLong(Character.toString(ch[i]));
            }

        sum*=k;

        while(sum/10 != 0) {
            sum = superDigit(sum);
        }
       
        return (int)sum;
    }
        ///////////////////////////////////////////////////////////////
        
        static long superDigit(long num) {

            if( num != 0) return (num%10 + superDigit(num/10));

            else return 0;
        }


    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] nk = scanner.nextLine().split(" ");

        String n = nk[0];

        int k = Integer.parseInt(nk[1]);

        int result = superDigit(n, k);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
